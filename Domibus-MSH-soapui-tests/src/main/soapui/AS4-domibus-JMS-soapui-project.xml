<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="1c29d1fb-f8ae-4ddb-ac43-1469a15001ec" activeEnvironment="Default" name="TESTS_JMS" resourceRoot="" soapui-version="5.2.1" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="9581111c-248c-4085-bf9f-dc452577042f" wsaVersion="NONE" name="BackendService_1_1SoapBinding" type="wsdl" bindingName="{http://org.ecodex.backend/1_1/}BackendService_1_1SoapBinding" soapVersion="1_2" anonymous="optional" definition="http://localhost:8080/domibus/services/backend?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/domibus/services/backend?wsdl"><con:part><con:url>http://localhost:8080/domibus/services/backend?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="BackendService_1_1" targetNamespace="http://org.ecodex.backend/1_1/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://org.ecodex.backend/1_1/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns2="http://schemas.xmlsoap.org/soap/http" xmlns:ns1="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/">
  <wsdl:types>
    <xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/" xmlns:tns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/" xmlns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/">
      <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
      <xsd:annotation>
        <xsd:appinfo>Schema for Domibus messages' headers submission</xsd:appinfo>
        <xsd:documentation xml:lang="en">This schema defines an XML subset of ebMS-3 headers which is used to validate messages submitted to Domibus
            through WS plugin.</xsd:documentation>
      </xsd:annotation>
      <xsd:element name="Messaging" type="Messaging"/>
      <xsd:complexType name="Messaging">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="UserMessage" type="UserMessage"/>
        </xsd:sequence>
        <xsd:attribute name="mustUnderstand" type="xsd:boolean" use="optional"/>
      </xsd:complexType>
      <xsd:complexType name="UserMessage">
        <xsd:all>
          <xsd:element maxOccurs="1" minOccurs="0" name="MessageInfo" type="MessageInfo"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="PartyInfo" type="PartyInfo"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="CollaborationInfo" type="CollaborationInfo"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="MessageProperties" type="tns:MessageProperties"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="PayloadInfo" type="tns:PayloadInfo"/>
        </xsd:all>
        <xsd:attribute name="mpc" type="xsd:anyURI" use="optional"/>
      </xsd:complexType>
      <xsd:complexType name="MessageInfo">
        <xsd:all>
          <xsd:element maxOccurs="1" minOccurs="0" name="Timestamp" type="xsd:dateTime"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="MessageId" type="tns:max255-non-empty-string"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="RefToMessageId" type="tns:max255-non-empty-string"/>
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="PartyInfo">
        <xsd:all>
          <xsd:element maxOccurs="1" minOccurs="1" name="From" type="tns:From"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="To" type="tns:To"/>
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="PartyId">
        <xsd:simpleContent>
          <xsd:extension base="tns:max255-non-empty-string">
            <xsd:attribute name="type" type="tns:max255-non-empty-string" use="required"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="From">
        <xsd:all>
          <xsd:element maxOccurs="1" minOccurs="1" name="PartyId" type="tns:PartyId"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="Role" type="tns:max255-non-empty-string"/>
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="To">
        <xsd:all>
          <xsd:element maxOccurs="1" minOccurs="1" name="PartyId" type="tns:PartyId"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="Role" type="tns:max255-non-empty-string"/>
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="CollaborationInfo">
        <xsd:all>
          <xsd:element minOccurs="0" name="AgreementRef" type="tns:AgreementRef"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="Service" type="tns:Service"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="Action" type="xsd:token"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="ConversationId" type="xsd:token"/>
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="Service">
        <xsd:simpleContent>
          <xsd:extension base="tns:max255-non-empty-string">
            <xsd:attribute name="type" type="tns:max255-non-empty-string" use="required"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="AgreementRef">
        <xsd:simpleContent>
          <xsd:extension base="tns:max255-non-empty-string">
            <xsd:attribute name="type" type="tns:max255-non-empty-string" use="optional"/>
            <xsd:attribute name="pmode" type="tns:max255-non-empty-string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="PayloadInfo">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="1" name="PartInfo" type="tns:PartInfo"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PartInfo">
        <xsd:all>
          <xsd:element minOccurs="0" name="Schema" type="Schema"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="Description" type="tns:Description"/>
          <xsd:element minOccurs="0" name="PartProperties" type="tns:PartProperties"/>
        </xsd:all>
        <xsd:attribute name="href" type="xsd:token" use="required"/>
      </xsd:complexType>
      <xsd:complexType name="Property">
        <xsd:simpleContent>
          <xsd:extension base="tns:max255-non-empty-string">
            <xsd:attribute name="name" type="tns:max255-non-empty-string" use="required"/>
            <xsd:attribute name="type" type="tns:max255-non-empty-string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="PartProperties">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" name="Property" type="tns:Property"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MessageProperties">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" name="Property" type="Property"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Schema">
        <xsd:attribute name="location" type="xsd:anyURI" use="optional"/>
        <xsd:attribute name="version" type="tns:max255-non-empty-string" use="optional"/>
        <xsd:attribute name="namespace" type="tns:max255-non-empty-string" use="optional"/>
      </xsd:complexType>
      <xsd:complexType name="Description">
        <xsd:simpleContent>
          <xsd:extension base="tns:max255-non-empty-string">
            <xsd:attribute ref="xml:lang" use="required"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:simpleType name="max255-non-empty-string">
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1"/>
          <xsd:maxLength value="255"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://org.ecodex.backend/1_1/" xmlns:ns1="http://www.w3.org/2005/05/xmlmime">
      <xsd:import namespace="http://www.w3.org/2005/05/xmlmime"/>
      <xsd:simpleType name="max255-non-empty-string">
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1"/>
          <xsd:maxLength value="255"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="FaultDetail">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="code" type="xsd:string"/>
            <xsd:element name="message" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="retrieveMessageRequest">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="messageID" nillable="true" type="tns:max255-non-empty-string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="retrieveMessageResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="bodyload" type="tns:LargePayloadType"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="payload" type="tns:LargePayloadType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="listPendingMessagesRequest" nillable="false" type="xsd:anyType"/>
      <xsd:element name="listPendingMessagesResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="messageID" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="messageErrorsRequest">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="messageID" type="tns:max255-non-empty-string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="messageStatusRequest">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="messageID" type="tns:max255-non-empty-string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="submitRequest">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="bodyload" type="tns:LargePayloadType"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="payload" nillable="true" type="tns:LargePayloadType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="submitResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="messageID" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:complexType name="PayloadType">
        <xsd:simpleContent>
          <xsd:extension base="ns1:base64Binary">
            <xsd:attribute name="payloadId" type="xsd:token" use="required"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="LargePayloadType">
        <xsd:sequence>
          <xsd:element name="value" ns1:expectedContentTypes="application/octet-stream" type="xsd:base64Binary"/>
        </xsd:sequence>
        <xsd:attribute name="payloadId" type="xsd:token" use="required"/>
        <xsd:attribute name="contentType" type="xsd:string"/>
      </xsd:complexType>
      <xsd:complexType name="errorResultImpl">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="errorCode" type="tns:errorCode"/>
          <xsd:element minOccurs="0" name="errorDetail" type="xsd:string"/>
          <xsd:element minOccurs="0" name="messageInErrorId" type="xsd:string"/>
          <xsd:element minOccurs="0" name="mshRole" type="tns:mshRole"/>
          <xsd:element minOccurs="0" name="notified" type="xsd:dateTime"/>
          <xsd:element minOccurs="0" name="timestamp" type="xsd:dateTime"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PayloadURLType">
        <xsd:simpleContent>
          <xsd:extension base="xsd:string">
            <xsd:attribute name="payloadId" type="xsd:token" use="required"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:simpleType name="messageStatus">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="READY_TO_SEND"/>
          <xsd:enumeration value="READY_TO_PULL"/>
          <xsd:enumeration value="BEING_PULLED"/>
          <xsd:enumeration value="SEND_ENQUEUED"/>
          <xsd:enumeration value="SEND_IN_PROGRESS"/>
          <xsd:enumeration value="WAITING_FOR_RECEIPT"/>
          <xsd:enumeration value="ACKNOWLEDGED"/>
          <xsd:enumeration value="ACKNOWLEDGED_WITH_WARNING"/>
          <xsd:enumeration value="SEND_ATTEMPT_FAILED"/>
          <xsd:enumeration value="SEND_FAILURE"/>
          <xsd:enumeration value="NOT_FOUND"/>
          <xsd:enumeration value="WAITING_FOR_RETRY"/>
          <xsd:enumeration value="RECEIVED"/>
          <xsd:enumeration value="RECEIVED_WITH_WARNINGS"/>
          <xsd:enumeration value="DELETED"/>
          <xsd:enumeration value="DOWNLOADED"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="errorCode">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="EBMS_0001"/>
          <xsd:enumeration value="EBMS_0002"/>
          <xsd:enumeration value="EBMS_0003"/>
          <xsd:enumeration value="EBMS_0004"/>
          <xsd:enumeration value="EBMS_0005"/>
          <xsd:enumeration value="EBMS_0006"/>
          <xsd:enumeration value="EBMS_0007"/>
          <xsd:enumeration value="EBMS_0008"/>
          <xsd:enumeration value="EBMS_0009"/>
          <xsd:enumeration value="EBMS_0010"/>
          <xsd:enumeration value="EBMS_0011"/>
          <xsd:enumeration value="EBMS_0101"/>
          <xsd:enumeration value="EBMS_0102"/>
          <xsd:enumeration value="EBMS_0103"/>
          <xsd:enumeration value="EBMS_0201"/>
          <xsd:enumeration value="EBMS_0202"/>
          <xsd:enumeration value="EBMS_0301"/>
          <xsd:enumeration value="EBMS_0302"/>
          <xsd:enumeration value="EBMS_0303"/>
          <xsd:enumeration value="EBMS_0020"/>
          <xsd:enumeration value="EBMS_0021"/>
          <xsd:enumeration value="EBMS_0022"/>
          <xsd:enumeration value="EBMS_0023"/>
          <xsd:enumeration value="EBMS_0030"/>
          <xsd:enumeration value="EBMS_0031"/>
          <xsd:enumeration value="EBMS_0040"/>
          <xsd:enumeration value="EBMS_0041"/>
          <xsd:enumeration value="EBMS_0042"/>
          <xsd:enumeration value="EBMS_0043"/>
          <xsd:enumeration value="EBMS_0044"/>
          <xsd:enumeration value="EBMS_0045"/>
          <xsd:enumeration value="EBMS_0046"/>
          <xsd:enumeration value="EBMS_0047"/>
          <xsd:enumeration value="EBMS_0048"/>
          <xsd:enumeration value="EBMS_0049"/>
          <xsd:enumeration value="EBMS_0050"/>
          <xsd:enumeration value="EBMS_0051"/>
          <xsd:enumeration value="EBMS_0052"/>
          <xsd:enumeration value="EBMS_0053"/>
          <xsd:enumeration value="EBMS_0054"/>
          <xsd:enumeration value="EBMS_0055"/>
          <xsd:enumeration value="EBMS_0060"/>
          <xsd:enumeration value="EBMS_0065"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="mshRole">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="SENDING"/>
          <xsd:enumeration value="RECEIVING"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType final="#all" name="errorResultImplArray">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:errorResultImpl"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="getStatusRequest" nillable="true">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="messageID" type="tns:max255-non-empty-string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="statusRequest" nillable="true">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="messageID" type="tns:max255-non-empty-string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getStatusResponse" nillable="true" type="tns:messageStatus"/>
      <xsd:element name="getErrorsRequest" nillable="true">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="messageID" type="tns:max255-non-empty-string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getMessageErrorsResponse" nillable="true" type="tns:errorResultImplArray"/>
    </xsd:schema>
    <xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:annotation>
        <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.

    This schema document describes the XML namespace, in a form
    suitable for import by other schema documents.  

    Note that local names in this namespace are intended to be defined
    only by the World Wide Web Consortium or its subgroups.  The
    following names are currently defined in this namespace and should
    not be used with conflicting semantics by any Working Group,
    specification, or document instance:

    base (as an attribute name): denotes an attribute whose value
         provides a URI to be used as the base for interpreting any
         relative URIs in the scope of the element on which it
         appears; its value is inherited.  This name is reserved
         by virtue of its definition in the XML Base specification.

    id   (as an attribute name): denotes an attribute whose value
         should be interpreted as if declared to be of type ID.
         The xml:id specification is not yet a W3C Recommendation,
         but this attribute is included here to facilitate experimentation
         with the mechanisms it proposes.  Note that it is _not_ included
         in the specialAttrs attribute group.

    lang (as an attribute name): denotes an attribute whose value
         is a language code for the natural language of the content of
         any element; its value is inherited.  This name is reserved
         by virtue of its definition in the XML specification.
  
    space (as an attribute name): denotes an attribute whose
         value is a keyword indicating what whitespace processing
         discipline is intended for the content of the element; its
         value is inherited.  This name is reserved by virtue of its
         definition in the XML specification.

    Father (in any context at all): denotes Jon Bosak, the chair of 
         the original XML Working Group.  This name is reserved by 
         the following decision of the W3C XML Plenary and 
         XML Coordination groups:

             In appreciation for his vision, leadership and dedication
             the W3C XML Plenary on this 10th day of February, 2000
             reserves for Jon Bosak in perpetuity the XML name
             xml:Father</xs:documentation>
      </xs:annotation>
      <xs:annotation>
        <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang, xml:space or xml:id
        attributes on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
      </xs:annotation>
      <xs:annotation>
        <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2005/08/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself, or with the XML namespace itself.  In other words, if the XML
   Schema or XML namespaces change, the version of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2005/08/xml.xsd will not change.</xs:documentation>
      </xs:annotation>
      <xs:attribute name="lang">
        <xs:annotation>
          <xs:documentation>Attempting to install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values is probably never
         going to be a realistic possibility.  See
         RFC 3066 at http://www.ietf.org/rfc/rfc3066.txt and the IANA registry
         at http://www.iana.org/assignments/lang-tag-apps.htm for
         further information.

         The union allows for the 'un-declaration' of xml:lang with
         the empty string.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:union memberTypes="xs:language">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value=""/>
              </xs:restriction>
            </xs:simpleType>
          </xs:union>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="space">
        <xs:simpleType>
          <xs:restriction base="xs:NCName">
            <xs:enumeration value="default"/>
            <xs:enumeration value="preserve"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="base" type="xs:anyURI">
        <xs:annotation>
          <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="id" type="xs:ID">
        <xs:annotation>
          <xs:documentation>See http://www.w3.org/TR/xml-id/ for
                     information about this attribute.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup name="specialAttrs">
        <xs:attribute ref="xml:base"/>
        <xs:attribute ref="xml:lang"/>
        <xs:attribute ref="xml:space"/>
      </xs:attributeGroup>
    </xs:schema>
    <xs:schema targetNamespace="http://www.w3.org/2005/05/xmlmime" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xmime="http://www.w3.org/2005/05/xmlmime">
      <xs:attribute name="contentType">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="3"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="expectedContentTypes" type="xs:string"/>
      <xs:complexType name="base64Binary">
        <xs:simpleContent>
          <xs:extension base="xs:base64Binary">
            <xs:attribute ref="xmime:contentType"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:complexType name="hexBinary">
        <xs:simpleContent>
          <xs:extension base="xs:hexBinary">
            <xs:attribute ref="xmime:contentType"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getStatusResponse">
    <wsdl:part element="tns:getStatusResponse" name="getStatusResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listPendingMessagesResponse">
    <wsdl:part element="tns:listPendingMessagesResponse" name="listPendingMessagesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMessageErrorsResponse">
    <wsdl:part element="tns:getMessageErrorsResponse" name="getMessageErrorsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="submitMessageResponse">
    <wsdl:part element="tns:submitResponse" name="submitResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="RetrieveMessageFault">
    <wsdl:part element="tns:FaultDetail" name="RetrieveMessageFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMessageErrors">
    <wsdl:part element="tns:getErrorsRequest" name="getErrorsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatus">
    <wsdl:part element="tns:statusRequest" name="statusRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listPendingMessages">
    <wsdl:part element="tns:listPendingMessagesRequest" name="listPendingMessagesRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SubmitMessageFault">
    <wsdl:part element="tns:FaultDetail" name="SubmitMessageFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="StatusFault">
    <wsdl:part element="tns:FaultDetail" name="StatusFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="submitMessage">
    <wsdl:part element="tns:submitRequest" name="submitRequest"></wsdl:part>
    <wsdl:part element="ns1:Messaging" name="ebMSHeaderInfo"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="retrieveMessage">
    <wsdl:part element="tns:retrieveMessageRequest" name="retrieveMessageRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="retrieveMessageResponse">
    <wsdl:part element="tns:retrieveMessageResponse" name="retrieveMessageResponse"></wsdl:part>
    <wsdl:part element="ns1:Messaging" name="ebMSHeaderInfo"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="BackendInterface">
    <wsdl:operation name="listPendingMessages">
      <wsdl:input message="tns:listPendingMessages" name="listPendingMessages"></wsdl:input>
      <wsdl:output message="tns:listPendingMessagesResponse" name="listPendingMessagesResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMessageErrors">
      <wsdl:input message="tns:getMessageErrors" name="getMessageErrors"></wsdl:input>
      <wsdl:output message="tns:getMessageErrorsResponse" name="getMessageErrorsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStatus">
      <wsdl:input message="tns:getStatus" name="getStatus"></wsdl:input>
      <wsdl:output message="tns:getStatusResponse" name="getStatusResponse"></wsdl:output>
      <wsdl:fault message="tns:StatusFault" name="StatusFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="submitMessage">
      <wsdl:input message="tns:submitMessage" name="submitMessage"></wsdl:input>
      <wsdl:output message="tns:submitMessageResponse" name="submitMessageResponse"></wsdl:output>
      <wsdl:fault message="tns:SubmitMessageFault" name="SubmitMessageFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="retrieveMessage" parameterOrder="retrieveMessageRequest retrieveMessageResponse ebMSHeaderInfo">
      <wsdl:input message="tns:retrieveMessage" name="retrieveMessage"></wsdl:input>
      <wsdl:output message="tns:retrieveMessageResponse" name="retrieveMessageResponse"></wsdl:output>
      <wsdl:fault message="tns:RetrieveMessageFault" name="RetrieveMessageFault"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="BackendService_1_1SoapBinding" type="tns:BackendInterface">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="listPendingMessages">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="listPendingMessages">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="listPendingMessagesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMessageErrors">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getMessageErrors">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getMessageErrorsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStatus">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getStatus">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getStatusResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="StatusFault">
        <soap12:fault name="StatusFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="submitMessage">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="submitMessage">
        <soap12:header message="tns:submitMessage" part="ebMSHeaderInfo" use="literal"></soap12:header>
        <soap12:body parts="submitRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="submitMessageResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SubmitMessageFault">
        <soap12:fault name="SubmitMessageFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="retrieveMessage">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="retrieveMessage">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="retrieveMessageResponse">
        <soap12:header message="tns:retrieveMessageResponse" part="ebMSHeaderInfo" use="literal"></soap12:header>
        <soap12:body parts="retrieveMessageResponse" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RetrieveMessageFault">
        <soap12:fault name="RetrieveMessageFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="BackendService_1_1">
    <wsdl:port binding="tns:BackendService_1_1SoapBinding" name="BACKEND_PORT">
      <soap12:address location="http://localhost:8080/domibus/services/backend"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:endpoint>http://localhost:8080/domibus/services/backend</con:endpoint><con:endpoint>http://wltdgt02.cc.cec.eu.int:1063/domibus-weblogic/services/backend</con:endpoint></con:endpoints><con:operation id="767cb481-8b7d-45ef-957f-e823696a27be" isOneWay="false" action="" name="getMessageErrors" bindingOperationName="getMessageErrors" type="Request-Response" outputName="getMessageErrorsResponse" inputName="getMessageErrors" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="f3563058-db2b-4135-a5e0-ddcfb8386683" isOneWay="false" action="" name="listPendingMessages" bindingOperationName="listPendingMessages" type="Request-Response" outputName="listPendingMessagesResponse" inputName="listPendingMessages" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="854782c9-2abc-4349-93f6-240147556428" isOneWay="false" action="" name="submitMessage" bindingOperationName="submitMessage" type="Request-Response" outputName="submitMessageResponse" inputName="submitMessage" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3f133f98-0a64-4fae-bcf5-2e64d1a04e16" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:ns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/" xmlns:_1="http://org.ecodex.backend/1_1/">
   <soap:Header>
      <ns:Messaging mustUnderstand="?">
         </ns:Messaging>
   </soap:Header>
   <soap:Body>
      <_1:submitRequest>
         </_1:submitRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/submitMessage"/><con:wsrmConfig version="1.2"/></con:call><con:call id="e984a797-da44-4ed9-88e6-118cdebcc075" name="Request 2"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:ns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header>\r
      <ns:Messaging mustUnderstand="?">\r
         <!--Optional:-->\r
         <ns:UserMessage mpc="?">\r
            <!--You may enter the following 5 items in any order-->\r
            <!--Optional:-->\r
            <ns:MessageInfo>\r
               <!--You may enter the following 3 items in any order-->\r
               <!--Optional:-->\r
               <ns:Timestamp>?</ns:Timestamp>\r
               <!--Optional:-->\r
               <ns:MessageId>?</ns:MessageId>\r
               <!--Optional:-->\r
               <ns:RefToMessageId>?</ns:RefToMessageId>\r
            </ns:MessageInfo>\r
            <ns:PartyInfo>\r
               <!--You may enter the following 2 items in any order-->\r
               <ns:From>\r
                  <!--You may enter the following 2 items in any order-->\r
                  <ns:PartyId type="?">?</ns:PartyId>\r
                  <ns:Role>?</ns:Role>\r
               </ns:From>\r
               <!--Optional:-->\r
               <ns:To>\r
                  <!--You may enter the following 2 items in any order-->\r
                  <ns:PartyId type="?">?</ns:PartyId>\r
                  <ns:Role>?</ns:Role>\r
               </ns:To>\r
            </ns:PartyInfo>\r
            <ns:CollaborationInfo>\r
               <!--You may enter the following 4 items in any order-->\r
               <!--Optional:-->\r
               <ns:AgreementRef type="?" pmode="?">?</ns:AgreementRef>\r
               <ns:Service type="?">?</ns:Service>\r
               <ns:Action>?</ns:Action>\r
               <!--Optional:-->\r
               <ns:ConversationId>?</ns:ConversationId>\r
            </ns:CollaborationInfo>\r
            <ns:MessageProperties>\r
               <!--1 or more repetitions:-->\r
               <ns:Property name="?" type="?">?</ns:Property>\r
            </ns:MessageProperties>\r
            <ns:PayloadInfo>\r
               <!--1 or more repetitions:-->\r
               <ns:PartInfo href="?">\r
                  <!--Optional:-->\r
                  <ns:PartProperties>\r
                     <!--1 or more repetitions:-->\r
                     <ns:Property name="?" type="?">?</ns:Property>\r
                  </ns:PartProperties>\r
               </ns:PartInfo>\r
            </ns:PayloadInfo>\r
         </ns:UserMessage>\r
      </ns:Messaging>\r
   </soap:Header>\r
   <soap:Body>\r
      <_1:submitRequest>\r
         <!--Optional:-->\r
         <bodyload payloadId="?" contentType="?">\r
            <value>cid:527230167435</value>\r
         </bodyload>\r
         <!--Zero or more repetitions:-->\r
         <payload payloadId="?" contentType="?">\r
            <value>cid:993829285671</value>\r
         </payload>\r
      </_1:submitRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/submitMessage"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="fa93f66f-0dee-457b-9182-2f3dac23e65c" isOneWay="false" action="" name="retrieveMessage" bindingOperationName="retrieveMessage" type="Request-Response" outputName="retrieveMessageResponse" inputName="retrieveMessage" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8955e910-8ad0-4f6a-84e5-e5305aa8bda4" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:retrieveMessageRequest>\r
         <messageID>?</messageID>\r
      </_1:retrieveMessageRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/retrieveMessage"/></con:call><con:call id="e7667214-6a86-430e-a470-7a5c7d463ed5" name="Request 2"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:retrieveMessageRequest>\r
         <messageID>?</messageID>\r
      </_1:retrieveMessageRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/retrieveMessage"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="f3c6fe64-3e6d-4241-b6ef-c2238e21fd0b" isOneWay="false" action="" name="getStatus" bindingOperationName="getStatus" type="Request-Response" outputName="getStatusResponse" inputName="getStatus" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9e9c4dbc-0255-4c97-bd4e-59e96bee396d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:statusRequest>\r
         <messageID>?</messageID>\r
      </_1:statusRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:testSuite id="9da56030-983e-4642-ba96-4a10d78dd7f7" name="Administration"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Clean Database" searchProperties="true" id="16662c35-1a24-43a3-bdf4-6a9388457083">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Clean All" id="985ea521-2524-4ab9-860e-3532f715c05b"><con:settings/><con:config><script>def test = new Domibus(log,null,context);
test.cleanDatabaseAll();
test.finalize();

</script></con:config></con:testStep><con:tearDownScript>//ExcelReporting.reportTestCase(testRunner, log)</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Configuration-localhost-tomcat-tomcat" searchProperties="true" id="8b902f72-7e0d-4389-8247-f9bf6c6495e4">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Set custom properties" id="91058f49-9963-487d-ad00-3b41755ab1fb"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("databaseBlue", "mysql");
testRunner.testCase.testSuite.project.setPropertyValue("driverBlue", "com.mysql.jdbc.Driver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlBlue", "jdbc:mysql://localhost:3306/domibus_blue");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbUser", "root");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbPassword", "root");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("databaseRed", "mysql");
testRunner.testCase.testSuite.project.setPropertyValue("driverRed", "com.mysql.jdbc.Driver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlRed", "jdbc:mysql://localhost:3306/domibus_red");
testRunner.testCase.testSuite.project.setPropertyValue("redDbUser", "root");
testRunner.testCase.testSuite.project.setPropertyValue("redDbPassword", "root");

testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Upload default PModes Blue-Red" id="38903868-8421-4031-b71c-7842652be2f1"><con:settings/><con:config><script>// Upload PModes: default Pmodes (blue for sender and red for receiver)  
Domibus.uploadPmode("sender","default","\\blue\\domibus-pmode-blue.xml",context,log);
Domibus.uploadPmode("receiver","default","\\red\\domibus-pmode-red.xml",context,log);</script></con:config></con:testStep><con:tearDownScript>//ExcelReporting.reportTestCase(testRunner, log)</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Configuration-localhost-tomcat-tomcat-bugfix" searchProperties="true" id="a48ac78b-5ee2-4009-a4e7-7e9f8d540808">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Set custom properties" id="bda05f2f-c032-4b3a-96bb-a7422be0e0b2"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("databaseBlue", "mysql");
testRunner.testCase.testSuite.project.setPropertyValue("driverBlue", "com.mysql.jdbc.Driver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlBlue", "jdbc:mysql://localhost:3306/domibus_blue_alt");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbUser", "root");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbPassword", "root");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("databaseRed", "mysql");
testRunner.testCase.testSuite.project.setPropertyValue("driverRed", "com.mysql.jdbc.Driver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlRed", "jdbc:mysql://localhost:3306/domibus_red_alt");
testRunner.testCase.testSuite.project.setPropertyValue("redDbUser", "root");
testRunner.testCase.testSuite.project.setPropertyValue("redDbPassword", "root");

testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Upload default PModes Blue-Red" id="a767c721-e751-4694-b6b8-7db7b6b58be4"><con:settings/><con:config><script>// Upload PModes: default Pmodes (blue for sender and red for receiver)  
Domibus.uploadPmode("sender","default","\\blue\\domibus-pmode-blue.xml",context,log);
Domibus.uploadPmode("receiver","default","\\red\\domibus-pmode-red.xml",context,log);</script></con:config></con:testStep><con:tearDownScript>//ExcelReporting.reportTestCase(testRunner, log)</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Configuration-cloud-weblogic-tomcat" searchProperties="true" id="9e2a9058-da2e-4207-831b-408e15fc1da4">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Set custom properties" id="f9c5c95a-a152-4b17-a2f8-63e1bafd2633"><con:settings/><con:config><script>// blue: weblogic (edeltest1)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://edeltest1.westeurope.cloudapp.azure.com:7005/domibus-weblogic");
testRunner.testCase.testSuite.project.setPropertyValue("databaseBlue", "oracle");
testRunner.testCase.testSuite.project.setPropertyValue("driverBlue", "oracle.jdbc.OracleDriver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlBlue", "jdbc:oracle:thin:@localhost:11521/xe");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbUser", "edelivery");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbPassword", "edelivery");

// red: tomcat (edeltest2)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://edeltest2.westeurope.cloudapp.azure.com:9080/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("databaseRed", "mysql");
testRunner.testCase.testSuite.project.setPropertyValue("driverRed", "com.mysql.jdbc.Driver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlRed", "jdbc:mysql://localhost:23306/domtestusr");
testRunner.testCase.testSuite.project.setPropertyValue("redDbUser", "root");
testRunner.testCase.testSuite.project.setPropertyValue("redDbPassword", "edelCld2017");

testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

log.info "Update done.";
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload default PModes Blue-Red" id="11ace457-262d-4fbd-88b7-7d5aebcd9503"><con:settings/><con:config><script>// Upload PModes: default Pmodes (blue for sender and red for receiver)  
Domibus.uploadPmode("sender","default","\\cloud\\weblogic\\blue\\domibus-pmode-blue.xml",context,log);
Domibus.uploadPmode("receiver","default","\\cloud\\weblogic\\red\\domibus-pmode-red.xml",context,log);</script></con:config></con:testStep><con:tearDownScript>//ExcelReporting.reportTestCase(testRunner, log)</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Configuration-cloud-tomcat-tomcat" searchProperties="true" id="0e0da18a-6779-4707-aa0d-54803f635ddd">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Set custom properties" id="46af3ddc-9660-431f-aea4-a31b5d89f104"><con:settings/><con:config><script>// blue: tomcat (edeltest1)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://edeltest1.westeurope.cloudapp.azure.com:9080/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("databaseBlue", "mysql");
testRunner.testCase.testSuite.project.setPropertyValue("driverBlue", "com.mysql.jdbc.Driver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlBlue", "jdbc:mysql://localhost:13306/domtestusr");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbUser", "root");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbPassword", "edelCld2017");

// red: tomcat (edeltest2)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://edeltest2.westeurope.cloudapp.azure.com:9080/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("databaseRed", "mysql");
testRunner.testCase.testSuite.project.setPropertyValue("driverRed", "com.mysql.jdbc.Driver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlRed", "jdbc:mysql://localhost:23306/domtestusr");
testRunner.testCase.testSuite.project.setPropertyValue("redDbUser", "root");
testRunner.testCase.testSuite.project.setPropertyValue("redDbPassword", "edelCld2017");

testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

log.info "Update done.";
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload default PModes Blue-Red" id="969211ad-25d7-4867-aa79-e57ef69c4882"><con:settings/><con:config><script>// Upload PModes: default Pmodes (blue for sender and red for receiver)  
Domibus.uploadPmode("sender","default","\\cloud\\tomcat\\blue\\domibus-pmode-blue.xml",context,log);
Domibus.uploadPmode("receiver","default","\\cloud\\tomcat\\red\\domibus-pmode-red.xml",context,log);</script></con:config></con:testStep><con:tearDownScript>//ExcelReporting.reportTestCase(testRunner, log)</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Configuration-cloud-wildfly-tomcat" searchProperties="true" id="0cc40727-e6d3-4e3f-a3ac-aaabfdcfd382">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Set custom properties" id="5daf8fd6-b640-4ed4-9465-35c82e0b79d1"><con:settings/><con:config><script>// blue: wildfly (edeltest2)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://edeltest2.westeurope.cloudapp.azure.com:8085/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("databaseBlue", "mysql");
testRunner.testCase.testSuite.project.setPropertyValue("driverBlue", "com.mysql.jdbc.Driver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlBlue", "jdbc:mysql://localhost:23306/domibus33wildfly");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbUser", "domibus33wildfly");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbPassword", "domibus33wildfly");

// red: tomcat (edeltest2)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://edeltest2.westeurope.cloudapp.azure.com:9080/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("databaseRed", "mysql");
testRunner.testCase.testSuite.project.setPropertyValue("driverRed", "com.mysql.jdbc.Driver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlRed", "jdbc:mysql://localhost:23306/domtestusr");
testRunner.testCase.testSuite.project.setPropertyValue("redDbUser", "domtestusr");
testRunner.testCase.testSuite.project.setPropertyValue("redDbPassword", "domtestusr");

testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

log.info "Update done.";
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload default PModes Blue-Red" id="c7a8aa83-4314-4d39-ba87-233d0082e110"><con:settings/><con:config><script>// Upload PModes: default Pmodes (blue for sender and red for receiver)  
Domibus.uploadPmode("sender","default","\\cloud\\wildfly\\blue\\domibus-pmode-blue.xml",context,log);
Domibus.uploadPmode("receiver","default","\\cloud\\wildfly\\red\\domibus-pmode-red.xml",context,log);</script></con:config></con:testStep><con:tearDownScript>//ExcelReporting.reportTestCase(testRunner, log)</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Configuration-setLocalInstallationsPaths" searchProperties="true" id="8c381763-353a-419a-929d-50fff18c227c">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Set ec path" id="7e33c304-f766-4008-ac01-0fafb48789eb"><con:settings/><con:config><script>
testRunner.testCase.testSuite.project.setPropertyValue("pathBlue", "C:/ec/blue/domibus/");
testRunner.testCase.testSuite.project.setPropertyValue("pathRed", "C:/ec/red/domibus/");
testRunner.testCase.testSuite.project.setPropertyValue("pathGreen", "C:/ec/greenReceiver/domibus/");

log.info "Update done.";
</script></con:config></con:testStep><con:testStep type="groovy" name="Set domibus path" id="b2000618-cebb-4147-9137-96806fd9e54b"><con:settings/><con:config><script>
testRunner.testCase.testSuite.project.setPropertyValue("pathBlue", "C:/domibus/sender/domibus/");
testRunner.testCase.testSuite.project.setPropertyValue("pathRed", "C:/domibus/receiver/domibus/");
testRunner.testCase.testSuite.project.setPropertyValue("pathGreen", "C:/domibus/greenReceiver/domibus/");

log.info "Update done.";
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Dynamic Discovery path PEPPOL" id="b0462cac-e4c1-4ec2-bd13-002c29da77ab"><con:settings/><con:config><script>
testRunner.testCase.testSuite.project.setPropertyValue("pathBlue", "C:/domibus/senderDynPeppol/domibus/");
testRunner.testCase.testSuite.project.setPropertyValue("pathRed", "C:/domibus/receiver/domibus/");
testRunner.testCase.testSuite.project.setPropertyValue("pathGreen", "C:/domibus/greenReceiver/domibus/");

log.info "Update done.";
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Dynamic Discovery path OASIS" id="c0a255c0-990d-47fc-b9bb-0626111bbf65"><con:settings/><con:config><script>
testRunner.testCase.testSuite.project.setPropertyValue("pathBlue", "C:/domibus/senderDynOasis/domibus/");
testRunner.testCase.testSuite.project.setPropertyValue("pathRed", "C:/domibus/receiver/domibus/");
testRunner.testCase.testSuite.project.setPropertyValue("pathGreen", "C:/domibus/greenReceiver/domibus/");

log.info "Update done.";
</script></con:config></con:testStep><con:tearDownScript>//ExcelReporting.reportTestCase(testRunner, log)</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="aee4aa97-dbbc-4370-bc13-892d16feaf0d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestConnection" searchProperties="true"><con:settings/><con:testStep type="groovy" name="test connection DB" id="13ea1f82-3f63-4977-b2fb-38b88c6faab0" disabled="true"><con:settings/><con:config><script>def test = new Domibus(log,null,context);
test.openConnection();
log.info "CONNECTION OPENED";
test.closeConnection();
log.info "CONNECTION CLOSED";
test.finalize();</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="882ee6da-dc3d-41b7-a560-c259e3833c9e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Start default configuration" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set custom properties" id="570e3f4f-7d5f-4e93-96f1-39ec3eacd314"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("databaseBlue", "mysql");
testRunner.testCase.testSuite.project.setPropertyValue("driverBlue", "com.mysql.jdbc.Driver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlBlue", "jdbc:mysql://localhost:3306/domibus_blue");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbUser", "root");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbPassword", "root");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("databaseRed", "mysql");
testRunner.testCase.testSuite.project.setPropertyValue("driverRed", "com.mysql.jdbc.Driver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlRed", "jdbc:mysql://localhost:3306/domibus_red");
testRunner.testCase.testSuite.project.setPropertyValue("redDbUser", "root");
testRunner.testCase.testSuite.project.setPropertyValue("redDbPassword", "root");

testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Start Blue-Red" id="5e5ec351-fd1f-48bf-8164-c51974c2e3e7"><con:settings/><con:config><script>// Start 2 Domibus: sender and receiver
Domibus.startSetMSHs(1,1,0,context,log);
</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="83a7dce8-242a-4042-92b2-4916c34fb291"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Upload default PModes Blue-Red" id="574cdbea-2d13-498b-a7f1-282b1ab1e4f2"><con:settings/><con:config><script>// Upload PModes: default Pmodes (blue for sender and red for receiver)  
Domibus.uploadPmode("sender","default","\\blue\\domibus-pmode-blue.xml",context,log);
Domibus.uploadPmode("receiver","default","\\red\\domibus-pmode-red.xml",context,log);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="5b9fc052-2009-41a5-b70e-0f21dc44d889"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Upload default truststores Blue-Red" id="0312d29f-f769-4d48-b3df-b7629d4d39d0"><con:settings/><con:config><script>// Upload truststores: default truststores (blue for sender and red for receiver)  
Domibus.uploadTruststore("sender","default","\\blue\\gateway_truststore.jks",context,log);
Domibus.uploadTruststore("receiver","default","\\red\\gateway_truststore.jks",context,log);</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="d27094c4-0a10-473b-abc5-572b984c8d04"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filters to JMS Blue-Red" id="cb6e966f-130d-46cc-9796-ac954f138ffc"><con:settings/><con:config><script>Domibus.setMessageFilters("sender","Jms",context,log);
Domibus.setMessageFilters("receiver","Jms",context,log);
</script></con:config></con:testStep><con:tearDownScript/><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>65ecdf7b-e0e2-477b-b020-da4c7fb8c855</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3bc33515-eae2-46e7-a50f-1104a8d1a301</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7aefe4d7-98b5-43b1-8f34-4aa71764de77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="b3cb71a7-643e-4018-aeef-06960585f246" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Start 3 gateways configuration" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set custom properties" id="675f3ce8-1ca1-4742-b103-e37a1fb27ec0"><con:settings/><con:config><script>// blue: tomcat (edeltest1)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("databaseBlue", "mysql");
testRunner.testCase.testSuite.project.setPropertyValue("driverBlue", "com.mysql.jdbc.Driver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlBlue", "jdbc:mysql://localhost:3306/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbPassword", "root");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbPassword", "root");

// red: tomcat (edeltest2)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("databaseRed", "mysql");
testRunner.testCase.testSuite.project.setPropertyValue("driverRed", "com.mysql.jdbc.Driver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlRed", "jdbc:mysql://localhost:3306/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("redDbPassword", "root");
testRunner.testCase.testSuite.project.setPropertyValue("redDbPassword", "root");

testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "true");

log.info "Update done.";
</script></con:config></con:testStep><con:testStep type="groovy" name="Start Blue-Red-Green" id="68721198-3073-403d-8bff-6d7720f95d78"><con:settings/><con:config><script>// Start 3 Domibus: sender, receiver and green.
Domibus.startSetMSHs(1,1,1,context,log);
</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="b21a74cf-99e6-4664-b9fb-e0905ffa92d2"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Upload PModes Blue-Red-Green" id="18b8ee27-8c2a-4caf-8227-706511989a34"><con:settings/><con:config><script>// Upload PModes: blue for sender, red for receiver and green for the third Domibus.  
Domibus.uploadPmode("sender","special","\\Threegateways\\blue\\domibus-pmode-blue.xml",context,log);
Domibus.uploadPmode("receiver","special","\\Threegateways\\red\\domibus-pmode-red.xml",context,log);
Domibus.uploadPmode("receivergreen","special","\\Threegateways\\green\\domibus-pmode-green.xml",context,log);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="8e90787c-886d-41a6-a149-ea70071e6413"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Upload truststores Blue-Red-Green" id="4e237d51-ac39-4dab-9c40-ede4b67ddf34"><con:settings/><con:config><script>// Upload truststores: blue for sender, red for receiver and green for the third Domibus.  
Domibus.uploadTruststore("sender","special","\\Threegateways\\blue\\gateway_truststore.jks",context,log);
Domibus.uploadTruststore("receiver","special","\\Threegateways\\red\\gateway_truststore.jks",context,log);
Domibus.uploadTruststore("receivergreen","special","\\Threegateways\\green\\gateway_truststore.jks",context,log);
</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="9cebac82-b705-4257-a840-fa27ca283204"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filters to JMS Blue-Red-Green" id="2d86869e-76b7-40e0-b42f-c983047ef8a3"><con:settings/><con:config><script>Domibus.setMessageFilters("sender","Jms",context,log);
Domibus.setMessageFilters("receiver","Jms",context,log);
Domibus.setMessageFilters("receivergreen","Jms",context,log);
</script></con:config></con:testStep><con:tearDownScript/><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d861779-0a64-417b-b81f-dbaed89dc796</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42781f68-9908-4231-93af-c83bd2d27190</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f10dbea4-cf15-49a7-93b9-ab0ef7752097</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="75b4d7ff-fc7f-4c05-bd9b-1cad9c73b2ec" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add or change Teardown script" searchProperties="true"><con:settings/><con:testStep type="groovy" name="AddToTearDown" id="235fe2c6-ac8e-4b5d-837c-1d73e27fcdc8"><con:settings/><con:config><script>def lineToAdd = "ExcelReporting.reportTestCase(testRunner, log)"
log.info "START: Amendment tear down sciprts"
testRunner.testCase.testSuite.project.getTestSuiteList().each { testSuite ->
	testSuite.getTestCaseList().each { testCase ->
 		def td = testCase.getTearDownScript()
  		if (td == null) 
  		{
  			testCase.setTearDownScript(lineToAdd)
  		}
  		else if(!td.contains("ExcelReporting.reportTestCase")) {
  			def newTearDown = td + System.getProperty("line.separator") + lineToAdd
  			testCase.setTearDownScript(newTearDown)
  		}
 	}
 }
log.info "END: Amendment tear down sciprts"
</script></con:config></con:testStep><con:testStep type="groovy" name="ReplaceTearDownLine" id="6c416335-97de-4b87-8926-101e2a40ee87"><con:settings/><con:config><script>def newLine = System.getProperty("line.separator")
/*testRunner.testCase.testSuite.project.getTestSuiteList().each{
	testsuite -> log.info testsuite.name
}*/
//def oldLineToBeChanged = /(?&lt;!\/)ExcelReporting.reportTestCase/
//def newLineToBeChanged = "ExcelReporting.reportTestCase"

def newLineToBeChanged = "//ExcelReporting.reportTestCase"
def oldLineToBeChanged = /ExcelReporting.reportTestCase/


log.info "START: Amend tear down scripts"
testRunner.testCase.testSuite.project.getTestSuiteList().each { testSuite ->
	testSuite.getTestCaseList().each { testCase ->
 		def tdScript = testCase.getTearDownScript()
 		log.info tdScript;
  		if (tdScript != null) {			
  			testCase.setTearDownScript( tdScript.replaceAll(oldLineToBeChanged, newLineToBeChanged) )
  		}
 	}
 }

 log.info end</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="57c9ce32-2fda-497f-9b42-e4ac9b16fbe7"><con:settings/><con:config><script>def newLine = System.getProperty("line.separator")
def oldLineToBeChanged = /(?&lt;!\/)ExcelReporting.reportTestCase/

def newLineToBeChanged = "ExcelReporting.reportTestCase"

def tdScript="""
//ExcelReporting.reportTestCase(testRunner, log)

def test = new Domibus(log,null,context)
def msgID = context.expand( '\${Submit Message#Response#//messageID}' )
test.cleanDBMessageID(msgID)
test.finalize()
//ExcelReporting.reportTestCase(testRunner, log)
  //ExcelReporting.reportTestCase(testRunner, log)
"""

tdScript.trim().replaceAll(oldLineToBeChanged, newLineToBeChanged)
log.info tdScript</script></con:config></con:testStep><con:tearDownScript>//ExcelReporting.reportTestCase(testRunner, log)</con:tearDownScript><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Hash Participant" searchProperties="true" id="6e9294bb-2dcc-4fd7-823f-b7c37d52eeaa">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Hash" id="68dd1775-c451-49e5-a87d-ac34a5e09641"><con:settings/><con:config><script>def test = new BDMSL(log,null,context);
def CNAMEhash=test.encodeHash("0088:579800000778","MD5",false);
def NAPTRhash=test.encodeHash("0088:579800000778","SHA256",true);
log.info "CNAMEhash:"+CNAMEhash;
log.info "NAPTRhash:"+NAPTRhash;
test.finalize();</script></con:config></con:testStep><con:tearDownScript>//ExcelReporting.reportTestCase(testRunner, log)</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="631677fd-7cae-4c7c-88b2-e13f52047cdc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Properties handling" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Sample  domibus.property change" id="3db49547-9247-4cda-94e7-951c4033ebca"><con:settings/><con:config><script>def newValueToAssignOne="test1s23"
def propertyToChangeNameOne = "domibus.security.keystore.password"
def propValueDict = ["${propertyToChangeNameOne}" : newValueToAssignOne, 'domibus.database.port':'13306', 'domibus.deployment.clustered' : 'true']

Domibus.changeDomibusProperties("RED", propValueDict,  log, context, testRunner)
Domibus.restoreDomibusPropertiesFromBackup("RED",  log, context, testRunner)

</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="ebbda453-91e0-4412-95b8-f0113996b9e6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Set Third gateway property" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set true" id="f59553ac-179e-45d7-8c76-d83c0da815e2"><con:settings/><con:config><script>testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "true");
log.info "thirdGateway custom property set to true."</script></con:config></con:testStep><con:testStep type="groovy" name="Set false" id="facebea7-b498-44a7-80c8-a2aeded260ed"><con:settings/><con:config><script>testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");
log.info "thirdGateway custom property set to false."</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="fed27991-dbd5-4fb3-ae9e-424b3ad9a813" name="JMS-oneway Push-Auto for Bamboo"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS000-Clean Database" searchProperties="true" id="b56b6acf-eb4c-4913-8757-3714c15529c4" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Clean All" id="5d5d0729-92b6-4470-b95b-605acff2c895"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.cleanDatabaseAll()
test.finalize()</script></con:config></con:testStep><con:tearDownScript>ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS001-Submit Message-Basic Flow" searchProperties="true" id="c6bc93e6-660e-4e5d-966e-e2802676d91a">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="b8f74188-9bae-4ec7-83e9-3a48f767da47"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");

// Optional


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");

String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="b11d4bed-efc5-4063-897a-9293c582303d" disabled="true"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS001-") // Message ID not set to fix value => test step disabled
test.finalize()
</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS001-")
test.finalize()

ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS002-Submit Message-Basic Flow-Message with ID" searchProperties="true" id="8e3b9f82-b9e4-4d0e-b0f2-2af2e27a34ae">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="01ff9f69-5f9f-4654-ba7a-588eabbaf097"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS002-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="79060c9c-e5db-4c67-a08f-bab017ae6e23"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS002-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS002-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS006-Submit Message-Exceptional flow-Data-Message ID-Unicity" searchProperties="true" id="bd229fea-55fa-431e-a38f-9b772b8ecc5b">
            <con:settings/>
            <con:testStep type="groovy" name="Submit Message 1" id="7fc4a4ca-8ff7-4c58-aa63-797d64114914"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS006-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep>
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Test 1" id="8f7de433-6d4b-4af8-9d16-eb8ef14447fa"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS006-");
test.finalize();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="69a1ca92-9440-4dcd-8ec6-c906da18ca75"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS006-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test 2" id="b3a81751-dd3a-4fde-9240-70a5e66a28f8"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessageUnicity("-DomJMS006-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS006-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5b884e9e-8168-43ec-a800-c1e72d658f40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>36f270ac-60cf-4343-beeb-264d81eb2c0d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>79af0a89-82d5-40dc-8246-f7524f20975f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9a04f265-9f1d-4a32-a7ab-54f65dc0cbc8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS007-Submit Message-messageType-Mandatory" searchProperties="true" id="a48808a6-d0cb-4103-9d88-4541d1eeb4df">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="699a49f4-0b4e-4d8c-9822-1d659bc26eee"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

//messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS007-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="e56dc2ed-5618-455f-9b7f-0c5aefd8f772"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS007-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS007-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS008-Submit Message-messageType-Value" searchProperties="true" id="5e24d444-ff87-4eec-88da-baccee724ae4">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="1cb5aad5-1336-42d8-abfb-657394e6e855"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "pushMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS008-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="ff79153d-44ec-480e-8c97-72e826a8b0b3"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS007-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS008-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS009-Submit Message-action-Mandatory" searchProperties="true" id="da003f73-0158-42a0-a284-0e2a0561a439">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="b10ab980-1dca-476a-8f01-7ea17c5ff87f"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
//messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS009-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="24a3c9f2-8978-4d9a-a944-99eaf5c5ff95"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS009-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS009-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS012-Submit Message-Service-Mandatory" searchProperties="true" id="c9311941-be6b-4edd-88c0-62884d769f34">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="26b11c1c-f256-4f51-a03a-4e024ab8440a"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
//messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS012-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="a9e037d4-8ec5-4ec8-88b4-30f3f51b939c"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS012-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS012-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS015-Submit Message-serviceType-Mandatory-service typed" searchProperties="true" id="c5c6a274-e863-40bc-8f8f-55a3318f3747">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="55dcad8d-bb2d-43f2-ab8b-7c00c9e30032"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
//messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS015-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="e6ae19ea-1238-4490-9f7e-c65f0e1dcda1"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS015-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS015-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS017-Submit Message-conversationId" searchProperties="true" id="b5e96db0-737f-4c45-8ca6-85d926d305a5">
            <con:description/><con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="e9c8e70b-674b-4a3b-bf8d-b08251a4ea8f"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS017-1-");
messageMap.setStringProperty("conversationId", "123");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="a7d93bfb-4258-4e67-b37e-125ffb5e07c1"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61716");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-red");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-blue");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS017-2-");
messageMap.setStringProperty("conversationId", "123");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 3" id="64def3b2-d550-45db-90fc-c961f9bb3851"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS017-3-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="b0d9b5dd-a4a4-4ff8-8b2c-393c608c5c00"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS017-1-");
test.waitForStatus("DOWNLOADED","ACKNOWLEDGED","-DomJMS017-2-");
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS017-3-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS017-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS018-Submit Message-refToMessageId" searchProperties="true" id="3a58907e-10f5-44a9-9830-d9a4ad64fa0e">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="55b65d2b-89b1-49d0-a387-3848a37f3181"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS018-1-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="cf4724a4-c289-419b-9bb6-e38a8a177c44"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS018-2-");
messageMap.setStringProperty("refToMessageId", "-DomJMS018-1-");
 

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 3" id="62bfc155-9b6e-4110-a4a6-dd7091841e3a"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS018-3-");
messageMap.setStringProperty("refToMessageId", "-random-");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="f2f22107-1bbd-4fde-b9ec-4475c08d2a8c"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS018-1-");
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS018-2-");
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS018-3-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS018-")
test.finalize()
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS024-Submit Message-fromRole-Mandatory" searchProperties="true" id="77af1480-b898-4567-9e74-30f72e1ebcad">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="413dc4d7-be34-4db7-911e-fec996b800a4"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
//messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS024-1-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="b90eef27-1d6c-4916-94fe-d96a5d101521"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS024-2-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="2f249bad-bc1e-4fee-be35-2e81ca8010c7"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS024-1-");
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS024-2-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS024-")
test.finalize()
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS025-Submit Message-fromRole-Empty" searchProperties="true" id="8dadc800-7cf3-4350-9765-1c97a3dcf3f9">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="b28509c0-256c-468f-b1a6-c4fb1f5497fe"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "");
messageMap.setStringProperty("toRole", "");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS025-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="6d956f7b-8efb-4c46-9b91-287d46f7c733"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS025-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS025-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS028-Submit Message-toRole-Mandatory" searchProperties="true" id="8e5160df-72bc-4d89-bb86-0ebcd0254789">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="0b4b7f2f-c4c4-4690-ae65-00ab8da424bd"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
//messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS028-1-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="ef10f196-f425-45d0-b92a-4effe73cb4cb"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS028-2-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="39615366-5442-40e3-aee5-eda2b70134f4"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS028-1-")
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS028-2-")
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS028-1-");
test.cleanDBMessageID("-DomJMS028-2-");
test.finalize();
//ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS029-Submit Message-toRole-Empty" searchProperties="true" id="90a84b13-2a60-4bd4-ae2a-d9b213b6bb83">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="ed513cd7-9347-4ca0-9bdd-3e526646ac38"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "");
messageMap.setStringProperty("toRole", "");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS029-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="5bcedb1e-4c36-48bf-9e18-c01e55f7f486"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS029-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS029-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS032-Submit Message-fromPartyId-Mandatory" searchProperties="true" id="9e2a4edf-8f4f-4861-bab4-bd04f7249d0e">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="0091ad82-3d01-4c7e-9428-6e0be694aaa6"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("Timestamp", "2016-01-10");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
//messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS032-1-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="35f620d6-80d8-46cf-9c64-778f37ad2a04"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS032-2-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="f7594b18-6d64-4906-8666-46b2270120e3"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS032-1-");
test.verifyMessagePresence(1,1,"-DomJMS032-2-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS032-")
test.finalize()
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS034-Submit Message-fromPartyType-Mandatory" searchProperties="true" id="f353ec96-46d2-4185-ab21-47baaa4774e1">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="b119d5f3-172a-40ad-8324-5ec458df8cbc"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
//messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS034-1-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="d3f68c58-4b68-46bc-8704-f1edb9d34c42"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS034-2-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="e1d96915-7432-43cd-90c5-2ee6e1ee8912"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS034-1-");
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS034-2-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS034-")
test.finalize()
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS036-Submit Message-toPartyId-Mandatory" searchProperties="true" id="d54e2764-d1fd-48fd-ba11-37c01af50029">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="1df7b104-92b7-445f-917f-e4140a2da20d"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
//messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS036-1-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="fd4cfb9a-bdf0-439b-b6d2-cca17f7d0615"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS036-2-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="527cfc03-3c0e-4f24-9ea3-e4dae6b92b9d"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS036-1-");
test.verifyMessagePresence(1,1,"-DomJMS036-2-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS036-")
test.finalize()
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS038-Submit Message-toPartyType-Mandatory" searchProperties="true" id="b003c336-b690-44c9-99e0-5c1ff919048f">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="a75461bb-5b6a-4d45-9b00-3dfbc9a58388"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
//messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS038-1-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="0ecc34d2-dbfe-43a5-8af6-9105caf8e153"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS038-2-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="70ad0cc2-38a5-42a9-b19d-4e96c7ef7841"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS038-1-");
test.verifyMessagePresence(1,1,"-DomJMS038-2-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS038-")
test.finalize()
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS044-Submit Message-totalNumberOfPayloads-Mandatory" searchProperties="true" id="4a96f22c-fca2-42da-ae0a-6aed0710055d">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="2bbb96c1-220a-4401-9746-0548ab3ac824"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS044-1-");


//messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="0397833f-77b1-440b-9feb-f7ac4489c1c0"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS044-2-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="974aa5ff-accf-41af-855e-2f3d17229732"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS044-1-");
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS044-2-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS044-")
test.finalize()
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS048-Submit Message-payload_contentId" searchProperties="true" id="54f6fee5-5c15-4cfe-a15a-9563cc36350e">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="7c827055-45b0-45dd-a587-b8aaebd57daa"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS048-1-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:whatever");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="fd8d0657-7f7f-4be2-b829-f342b2af3493"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS048-2-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 3" id="0f86433c-a074-4609-a50f-1f736eb809a4"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS048-3-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
//messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="309866f1-a0c5-40f3-b05f-c267713a1364"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS048-1-");
test.verifyMessagePresence(0,0,"-DomJMS048-2-");
test.verifyMessagePresence(0,0,"-DomJMS048-3-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS048-")
test.finalize()
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="2f1193e0-c579-43f3-af5a-d29ceb8f3ba7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS050-Test Experience-Several payloads" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Submit Message" id="bc0c6b20-3447-4719-a2d2-b67f44da361d"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS050-");


messageMap.setStringProperty("totalNumberOfPayloads", "2");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload1 = pay1.getBytes();
messageMap.setBytes("payload_1", payload1);

messageMap.setStringProperty("payload_2_mimeContentId", "cid:attachment");
messageMap.setStringProperty("payload_2_mimeType", "application/pdf");
messageMap.setStringProperty("payload_2_description", "message");
String pay2 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload2 = pay2.getBytes();
messageMap.setBytes("payload_2", payload2);

/*messageMap.setStringProperty("payload_3-mimeContentId", "cid:message");
messageMap.setStringProperty("payload_3-mimeType", "text/xml");
messageMap.setStringProperty("payload_3-description", "message");
String pay3 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload3 = pay3.getBytes();
messageMap.setBytes("payload_3", payload3);*/

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="3f17a622-a2c5-45fa-abb4-c0ff62406154"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS050-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS050-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS051-Submit message-Tab and spaces" searchProperties="true" id="9dbc9ef3-1aa8-47a4-a0a7-f38a8c74a9e6">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="aa0a128f-f16d-435e-8f22-c096a2ff4598"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", " bdx:noprocess	");
messageMap.setStringProperty("serviceType", "  tc1");
messageMap.setStringProperty("action", "TC1Leg1		");
messageMap.setStringProperty("fromPartyId", "	domibus-blue ");
messageMap.setStringProperty("fromPartyType", " urn:oasis:names:tc:ebcore:partyid-type:unregistered	");
messageMap.setStringProperty("toPartyId", "   domibus-red ");
messageMap.setStringProperty("toPartyType", " urn:oasis:names:tc:ebcore:partyid-type:unregistered	");
messageMap.setStringProperty("fromRole", " http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator ");
messageMap.setStringProperty("toRole", "	http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder	");
messageMap.setStringProperty("originalSender", " urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1   ");
messageMap.setStringProperty("finalRecipient", "		urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS051-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "	cid:message	");
messageMap.setStringProperty("payload_1_mimeType", "	text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="a31ec502-5c9b-41ff-9588-8ce654c21ca5"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DELETED","-DomJMS051-")
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS051-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1296a5b0-a2bc-4847-9b70-f896c3bc1ce2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS056-EDELIVERY-3119-Issue with custom properties using JMS plugin" searchProperties="true" id="155ee545-2649-4b3a-b4bc-e590ccd36717">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="9e84086f-55d3-456e-aaff-aa3c982fbbab"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");

// Optional
messageMap.setStringProperty("messageId", "-DomJMS056-");
messageMap.setStringProperty("property_propWithoutType", "some value");
messageMap.setStringProperty("property_propWithType", "value");
messageMap.setStringProperty("propertyType_propWithType", "type");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");

String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="c14c9844-56fd-40e1-b7ce-754f96b6b15d"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS056-");
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS056-")
test.finalize()

ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="889a6cde-2346-488a-b9e6-882db54ba222" name="JMS-oneway Push-Auto Not for Bamboo"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS003-Submit Message-Exceptional flow-No receipt" searchProperties="true" id="43bf9d34-f13f-4453-8eae-de0ecb066013">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Stop Receiver MSH" id="bb6bc2e4-176b-4893-b647-a7114adc078e"><con:settings/><con:config><script>Domibus.stopMSH("receiver",context, log);</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="de0c90c6-c7bb-440a-a8e8-6cc2848634d3"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS003-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="7dea4934-9134-4c01-a63f-77bf898a1c67"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("WAITING_FOR_RETRY",null,"-DomJMS003-");
test.verifyMessagePresence(1,0,"-DomJMS003-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS003-");
test.finalize();
Domibus.startMSH("receiver", context, log)
ExcelReporting.reportTestCase(testRunner, log)</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e4dc722a-da83-4d6d-9cf8-262dc58f0585</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d96c0d09-2b87-4cfa-a0dc-f96081c863ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS004-Submit message-Exceptional flow-retry max not reached" searchProperties="true" id="a3142e98-3c58-404e-8df1-9d496aca97d7">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Stop Receiver MSH" id="e2f194bd-b16a-4990-89ad-f19f238d6b25"><con:settings/><con:config><script>Domibus.stopMSH("receiver",context, log);</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="829e0d8e-2a47-4b9e-8f3a-39b72b55920e"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="8b58a8d4-da4d-45d7-8c72-189249dcd64c"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS004-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="f5a04124-7520-4f95-967b-6adf4cf6b940"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("WAITING_FOR_RETRY",null,"-DomJMS004-")
test.verifyMessagePresence(1,0,"-DomJMS004-")
test.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Start Receiver MSH" id="57a4383e-0076-4e4d-b6e2-54da384e6303"><con:settings/><con:config><script>Domibus.startMSH("receiver", context, log)</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="bf73f906-cf05-40f4-a6e3-7b9533e8a478"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check message submitted" id="66ed89a4-11fd-44b6-b9a3-83862d5c420d"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS004-","Long");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS004-")
test.finalize()
Domibus.startMSH("receiver", context, log)
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9c6f08d0-5ce3-4757-b59f-44bb1b1640b3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0a2b3efa-6626-42cd-bf6a-1b83dd688944</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="56622746-a47f-4bf8-af90-c884725e3fb1" name="JMS-oneway Push-Manual test cases"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS052-Test Experience-Truststore Update" searchProperties="true" id="ff55d964-18c9-4e7b-b115-3951aaa82ee1">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Upload unsuitable truststore Blue" id="d4abae1b-2817-4150-82f0-4adc027da343"><con:settings/><con:config><script>// Upload unsuitable truststore to blue.  
Domibus.uploadTruststore("sender","special","\\DynamicDiscovery\\Sender\\gateway_truststore.jks",context,log);

</script></con:config></con:testStep><con:testStep type="groovy" name="Restart Domibus Sender" id="a3937fde-5936-44a4-8dbb-00c35865e408"><con:settings/><con:config><script>// Stop
Domibus.stopMSH("sender",context, log);

// Start
Domibus.startSetMSHs(1,0,0,context,log);

log.info "--DONE--";</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 1" id="3d466139-a0b8-48ca-a209-27787aa80a4f"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");

// Optional
messageMap.setStringProperty("messageId", "-DomJMS052-1-");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="1752fd64-6aed-4bd9-a397-60d57afff83e"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("SEND_FAILURE",null,"-DomJMS052-1-");
test.verifyMessagePresence(1,0,"-DomJMS052-1-");
test.finalize();</script></con:config></con:testStep><con:testStep type="groovy" name="Restore Truststore" id="b355b6b6-4a06-43d1-ae35-fdc0a70d7316"><con:settings/><con:config><script>// Upload default truststore for blue.  
Domibus.uploadTruststore("sender","default","\\blue\\gateway_truststore.jks",context,log);
</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="c731a8de-a071-4454-8103-2510abed3feb"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");

// Optional
messageMap.setStringProperty("messageId", "-DomJMS052-2-");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test good truststore" id="9152946c-b96c-4fed-8ea0-fb38d64e6f9d"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS052-2-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS052-");
test.finalize();
Domibus.startMSH("sender", context, log)
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cd8b9098-8fbd-42a9-8eb7-67404b5f59dd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>906220c2-8277-4fcb-a3bd-f15306888b25</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53c0a958-b619-493b-b45b-7b9d7ecf4e43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e138bc36-5999-4555-b848-c445b16888f9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bed6d5e9-a752-4924-85f2-7d968b646bac</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS054-Manual-EDELIVERY-1684-Message Id should always be present in the messages sent" searchProperties="true" id="1f50f26e-5224-4b2d-8bc2-8658055b9892">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="fea2782b-272f-478b-be91-bccf90a928bf"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");

// Optional
messageMap.setStringProperty("messageId", "-DomJMS054-");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="feb1fe7c-9923-4031-ad5e-0b87f98ac623"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");

// Optional
messageMap.setStringProperty("messageId", "-DomJMS054-"); // intentionally send second message with same ID the messgae should end in [internal] domibus.DLQ queue

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test msg present" id="6a6962b1-9d78-403d-b7d7-5d31f4a2a503"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS054-");
test.finalize();</script></con:config></con:testStep><con:testStep type="groovy" name="Check if messageID property can be found in JMS queues" id="4748f74d-8af3-4de8-bd65-ad7e26a6f8e5"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"""\
Intentionally send second message with the same messageID.
Check on Domibus - JMS Monitoring page that error message with messageID can be found in:
- [internal] domibus.backend.jms.replyQueue JMS queue at first 
- and in [internal] domibus.DLQ JMS queue after the retry limit is reached.
"""); 

if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS054-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>90414ed1-d501-45a8-86b6-466a1352735c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cd8b9098-8fbd-42a9-8eb7-67404b5f59dd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>906220c2-8277-4fcb-a3bd-f15306888b25</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53c0a958-b619-493b-b45b-7b9d7ecf4e43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e138bc36-5999-4555-b848-c445b16888f9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS055-Manual-EDELIVERY-1706-JMS Monitoring: empty messages are not displayed" searchProperties="true" id="afb24ea2-e853-4fc2-9790-e18c1c36617c">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="0d533f4e-cb65-46bd-92c9-3b4bfb0919f4"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.DLQ");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
 
Message request = session.createTextMessage(null);
 
log.info "Sending Text message with empty (null) text message"
producer.send(request);
log.info "Text message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Check if messageID property can be found in JMS queues" id="9bc7c53e-dc91-4f6c-b09a-9729f8fd936d"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"""\
In previous step intentionally empty text message was send to Dead Letter Queue.
Check on Domibus - JMS Monitoring page that message is present in:
[internal] domibus.DLQ JMS queue of Sender.
"""); 

if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:tearDownScript>ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>90414ed1-d501-45a8-86b6-466a1352735c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cd8b9098-8fbd-42a9-8eb7-67404b5f59dd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>906220c2-8277-4fcb-a3bd-f15306888b25</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53c0a958-b619-493b-b45b-7b9d7ecf4e43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e138bc36-5999-4555-b848-c445b16888f9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="1e9e408e-be46-479a-83aa-d8c07e0a80dd" name="EDELIVERY-1340-Maximum number of sending attempts" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS005-Submit message-Exceptional flow-retry max reached" searchProperties="true" id="c1a12aba-d88a-43ed-9c3b-e2dcd7b75221" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Stop Receiver MSH" id="c2c033d6-c56a-4e70-8dc2-85910b94fa27"><con:settings/><con:config><script>Domibus.stopMSH("receiver",context, log);</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="af1c8abf-19a2-42f7-811e-4c5390057bdf"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="02027f3d-c570-42a5-a683-a9137054dda7"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS005-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="8df6843a-7bc4-4f15-bebd-fc02c1783185"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("WAITING_FOR_RETRY",null,"-DomJMS005-");
test.verifyMessagePresence(1,0,"-DomJMS005-");
test.finalize();</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="aa73096e-0b1d-4451-9932-d47cc6294209"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check message submitted" id="5fe65c2d-545f-4a69-bb41-cc726042ad15"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("SEND_FAILURE",null,"-DomJMS005-","Long");
test.verifyMessagePresence(1,0,"-DomJMS005-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>Domibus.startMSH("receiver", context, log)

ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c189cf14-cd7d-41a8-81fe-3e1d4e5c28fa</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bc00ae7a-2d2a-4e11-90d4-ae07623d92ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="9c5c128b-7a86-4a1d-ac3d-e8653520ddf8" name="EDELIVERY-1386 - FallBack issue" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS011-Submit Message-action-FallBack" searchProperties="true" id="ad1abfa4-3e36-400d-96a8-3c46af0beb08" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Update Default properties file" id="bb1299cb-5b95-4355-8122-cc7374b3e611"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Add line:\nAction = \"TC1Leg1\""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="d5ede536-6f40-40b8-8761-9c641a58f2ab"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
//messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS011-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="bbec6380-2f98-4b92-9322-68574fab1c8b"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS011-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS011-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS013-Submit Message-Service-FallBack" searchProperties="true" id="50e68cf4-fb6a-4aaf-b456-5bb2c3156ea3" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Update Default properties file" id="823bb11f-0d7b-4613-939c-846c82b93e04"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Add line:\n Service = \"bdx:noprocess\""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="9684714d-a120-47b9-891a-d5920c577007"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
//messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS013-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="a16876dc-b140-49af-9c59-d9eb1086611c"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS013-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS013-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS016-Submit Message-serviceType-FallBack-service typed" searchProperties="true" id="bcc10cfb-7768-4197-ba4a-3b159ec7a46e" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Update Default properties file" id="3f062391-d1bf-467f-870f-9e441556bf51"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Add line:\n serviceType = \"tc1\""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="08383fb9-7ab1-4c91-b1fe-1f6a163cf932"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
//messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS016-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="7611528d-5a58-4ba2-95c9-580b45eabe7a"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS016-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS016-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS021-Submit Message-agreementRef-FallBack" searchProperties="true" id="4140c67e-c7d8-4359-a783-4c7b0375f190" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Update Default properties file" id="7a7a2611-e08c-4175-9db3-8d218f51d937"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Add line:\nAgreementRef = \"backUpAgreementRef\""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="31693f86-ef2d-4265-9364-e130a115d5c8"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS021-");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="32520f35-8bd1-4c66-a722-bd19f26e5fe4"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS021-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS021-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS026-Submit Message-fromRole-FallBack" searchProperties="true" id="f9a2857f-3b32-4152-af6a-1c9d9530a77a" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Update Default properties file" id="fbd980b5-1d59-415a-9dee-b143a2285fe5"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Add line:\nfromRole = \"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator\""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="2b833887-18ff-42a0-8916-b29a774c4463"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
//messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS026-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="f88cfd1b-5a4d-4d6e-8cc5-f2214af439ae"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS026-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS026-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS030-Submit Message-toRole-FallBack" searchProperties="true" id="c665c6b5-0ad6-42e5-92d0-97ac58d14b6e" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Update Default properties file" id="d485c1d5-840a-4f48-9249-06740816dbc8"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Add line:\ntoRole = \"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder\""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="5241503d-9447-4033-89a8-c0ccdb2214a6"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
//messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS030-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="0e88be3f-c412-4c1c-ae5e-af1997211c79"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS030-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS030-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>39528860-d05b-4e06-963c-ab716f1edcbc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS033-Submit Message-fromPartyId-fallBack" searchProperties="true" id="18e916c0-2b6e-4fd0-a47e-9c6b75b71ea2" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Update Default properties file" id="a7e69f5d-80d5-4ce3-99a7-79752aadf8a6"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Add line:\nfromPartyID = \"domibus-blue\""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="4304cb28-9411-4274-98bf-2b7a1d8c5423"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
//messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS033-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="2eaa5c22-c30c-4f84-aa84-9235c93476d4"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS033-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS033-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS035-Submit Message-fromPartyType-fallBack" searchProperties="true" id="64e4086a-64ac-4387-a83b-756f6fb2e516" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Update Default properties file" id="7e03fb62-cf66-476a-95b1-356aa01e4f6b"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Add line:\nfromPartyType = \"urn:oasis:names:tc:ebcore:partyid-type:unregistered\""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="37a4d2d4-85ed-4c4b-8777-ee78877ec25a"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
//messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS035-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="29886356-c012-4215-88d6-e744415c56ae"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS035-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS035-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2c35fd83-f603-4585-94ed-29800a1e4fc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS037-Submit Message-toPartyId-fallBack" searchProperties="true" id="df0cdded-e885-4443-bfc4-7ca6784792fa" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Update Default properties file" id="7b27883a-c7bb-40f9-9622-95342edf13ee"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Add line:\ntoPartyID = \"domibus-red\""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="37eae58a-910e-42dc-8398-4d9e891e4678"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
//messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS037-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="c4c6f0e1-8433-4dfe-93a1-6d5f8251556d"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS037-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS037-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS039-Submit Message-toPartyType-fallBack" searchProperties="true" id="76c132d2-c1a9-412a-9aa1-672da4a93bbb" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Update Default properties file" id="1beef9ee-efef-4a6c-a7c4-d926fa76da2d"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Add line:\ntoPartyType = \"urn:oasis:names:tc:ebcore:partyid-type:unregistered\""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="956aa314-f763-4c4e-a8fe-a56248369605"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
//messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS039-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="2170fd66-892a-4ca1-b062-076b82998dc3"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS039-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS039-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="b50931dc-7c79-4602-af91-9d1c071c704f" name="EDELIVERY-1388 - Differences in message parameters JMS and WS plugins" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS014-Submit Message-serviceType-Optional-service untyped" searchProperties="true" id="be94641f-1897-46b9-82bb-355f6ebaabaa">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="0a7d0f02-3ce2-44fa-b332-9a55b76fb582"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
//messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS014-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="934c12b2-9784-472b-a8f8-3fd09d88545b"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS014-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS014-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS020-Submit Message-agreementRef-Optional" searchProperties="true" id="76bd4b2e-535c-465c-9857-ab407a7fee00">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="7985bf11-d5c7-416a-b126-92e11620ce93"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc8");
messageMap.setStringProperty("action", "TC8Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS020-1-");
messageMap.setStringProperty("agreementRef", "agreementForDomJMS020Value");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="fec00bff-74e1-4ad5-93af-bde17fc6702f"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc8");
messageMap.setStringProperty("action", "TC8Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS020-2-eee");



messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="27cfc15e-6e3b-461f-8a29-ea579d0a1dda"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS020-1-");
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS020-2-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS020-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS023-Submit Message-agreementRefType" searchProperties="true" id="5456b309-d9de-44a1-808f-2f9e0f28fd57">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="35498825-45f9-4b8a-87b1-22a147db5e39"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc9");
messageMap.setStringProperty("action", "TC9Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS023-1-");
messageMap.setStringProperty("agreementRef", "agreementForDomJMS023Value");
messageMap.setStringProperty("agreementRefType", "random");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="38a77b8f-29f0-4c0c-9c29-75a9da2fbe61"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS023-2-");
messageMap.setStringProperty("agreementRefType", "useless");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="e96f68a4-1e8f-4423-9610-07c4f7f617cb"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS023-1-");
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS023-2-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS023-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS040-Submit Message-JMScorrelationId" searchProperties="true" id="942761e1-1398-418a-b723-f2de781e5694">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="24b1a670-e5db-4f5c-ada5-b09c6df9b1d9"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS040-");
messageMap.setStringProperty("JMScorrelationId", "-DomJMS040-JMScorrelationId-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Submit Message" id="53d1a31e-fa20-4b4e-a1a8-900197f7efdd"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");

// Optional
messageMap.setStringProperty("messageId", "-DomJMS040-2-");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="37e35da2-9c74-4331-b557-e1f20e17ce2d"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS040-");
test.finalize();</script></con:config></con:testStep><con:testStep type="groovy" name="Test replyQueue" id="9e9c226f-6f5c-4f6d-89ae-0c436edd31ba"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Browse the replyQueue to look for a message with parameter\nJMScorrelationId = \"-DomJMS040-\""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS040-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS043-Submit Message-protocol-Optional" searchProperties="true" id="40624d81-14e2-4813-92a0-959fdcffdd90">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="7fa3ccd7-8c06-4742-8c9c-1d219a899373"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
//messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS043-1-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="9724a884-879e-412d-9622-78df8034be65"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS043-2-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 3" id="037f34f5-e2ba-427d-87a8-861f47467fa9"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS043-3-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 4" id="046c022f-8690-4d0c-ac89-c6a82bc08d5a"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS2");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS043-4-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="f46353cb-9af2-421c-af1f-afd6a1ea7b49"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS043-1-");
test.verifyMessagePresence(1,1,"-DomJMS043-2-");
test.verifyMessagePresence(0,0,"-DomJMS043-3-");
test.verifyMessagePresence(0,0,"-DomJMS043-4-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS043-1-");
test.cleanDBMessageID("-DomJMS043-2-");
test.cleanDBMessageID("-DomJMS043-3-");
test.cleanDBMessageID("-DomJMS043-4-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS045-Submit Message-totalNumberOfPayloads-0" searchProperties="true" id="fdae4b76-e36c-469c-8747-354695046695">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="b953abe1-2eba-4397-8830-a6ff58536ba6"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS045-1-");


messageMap.setStringProperty("totalNumberOfPayloads", "0");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="30f84712-feeb-4207-b0be-b1e0c9d9954d"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS045-2-");


messageMap.setStringProperty("totalNumberOfPayloads", "0");
//messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
//messageMap.setStringProperty("payload_1_mimeType", "text/xml");
//messageMap.setStringProperty("payload_1_description", "message");
//String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
//byte[] payload = pay1.getBytes();
//messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="9a2150fc-2676-4f12-9d9a-dc24185a539d"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS045-1-");
test.verifyMessagePresence(1,1,"-DomJMS045-2-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS045-1-");
test.cleanDBMessageID("-DomJMS045-2-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS046-Submit Message-P1InBody-Optional" searchProperties="true" id="aeeecf40-d6c2-493e-a9b6-a03773d7805f">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Update Default properties file 1" id="774e9e72-0bdc-40c9-a2b8-acad9c8c6852"><con:settings/><con:config><script>DomibusUtils.showPopUpForManualConfigurationChange("""
Update P1InBody value (set line to P1InBody = true) in Sender and Receiver config files (jms-business-defaults.properties), remeber to restart both"""
, log, testRunner); 
</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 1" id="65575c84-0f00-4ae9-8a62-cce43f79bd71"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS046-1-");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="1e74542e-e3ee-467c-82a4-0ca93955d378"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS046-2-");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "application/octet-stream");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test P1InBody true" id="95d3060c-d9f7-407a-b323-f7049a50ba38"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS046-1-");
test.verifyMessagePresence(0,0,"-DomJMS046-2-");
test.finalize();</script></con:config></con:testStep><con:testStep type="groovy" name="Update Default properties file 2" id="17314e3f-9fb3-4aee-b3a5-3176a1e8776a"><con:settings/><con:config><script>DomibusUtils.showPopUpForManualConfigurationChange("""
Comment P1InBody value (set line to #P1InBody = false) in Sender and Receiver config files (jms-business-defaults.properties), remeber to restart both"""
, log, testRunner); </script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 3" id="199b8475-fb12-4687-9ab6-6f10033727fa"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS046-3-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test P1InBody commented" id="edbbb52e-c6f7-497f-9729-cdd77d450937"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS046-3-");
test.finalize();</script></con:config></con:testStep><con:testStep type="groovy" name="Update Default properties file 3" id="cf9156ed-76cd-4ada-bf4f-2e6518ab70fb"><con:settings/><con:config><script>DomibusUtils.showPopUpForManualConfigurationChange("""
Update P1InBody value (set line to P1InBody = false) in Sender and Receiver config files (jms-business-defaults.properties), remeber to restart both"""
, log, testRunner); 
</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 4" id="c2ab354b-fc5c-4ba8-bf38-b404ea519236"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS046-4-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="a3695413-8fdb-45dd-96b3-449ef8a00b32"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS046-4-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS046-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b716cb5e-a59e-4e27-87eb-33e933d748c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS047-Submit Message-payload_Description" searchProperties="true" id="ab951432-a0a3-4d28-86f7-e18707cb872e">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="d18dcba2-338f-4cba-abf9-8ec7fec2cfe8"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS047-1-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "Random Description");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="2536663a-e2a6-4eb0-84fc-f10dae14f5c8"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS047-2-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 3" id="2a41879d-0295-4b6c-8e0c-a555fa4bb904"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS047-3-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
//messageMap.setStringProperty("payload_1_description", "");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="fcf911f9-4b7e-4188-8dd0-e7c4603cc740"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS047-1-");
test.verifyMessagePresence(1,1,"-DomJMS047-2-");
test.verifyMessagePresence(1,1,"-DomJMS047-3-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS047-1-");
test.cleanDBMessageID("-DomJMS047-2-");
test.cleanDBMessageID("-DomJMS047-3-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS049-Submit Message-MimeType" searchProperties="true" id="4f597d50-c36a-4188-9148-ee3328dafcb3">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="e45ea9bf-3310-4734-b33f-962dc7d24f62"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");

// Optional
messageMap.setStringProperty("messageId", "-DomJMS049-1-");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Check AS4 message" id="b220fdfa-a571-4043-8c4f-52bd39b74d29"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"""
Check that the mime type in AS4 message is set to "text/xml".
Go to Sender log (domibus.log) find the lates AS4 message and check inside value for
//eb:Messagingeb:UserMessage/eb:PayloadInfo/eb:PartInfo[1]/eb:PartProperties/
is:
&lt;eb:Property name="MimeType">text/xml&lt;/eb:Property>.
"""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="025c06de-40dc-405c-95d7-afcfd5cf4c3f"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS049-2-");


messageMap.setStringProperty("totalNumberOfPayloads", "2");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);
messageMap.setStringProperty("payload_2-mimeContentId", "cid:attachment");
messageMap.setStringProperty("payload_2-mimeType", "application/pdf");
messageMap.setStringProperty("payload_2-description", "message");
String pay2 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload2 = pay2.getBytes();
messageMap.setBytes("payload_2", payload2);


log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Check AS4 message application/pdf" id="da1a0bba-0e93-42dc-88ee-426ab6bfa8df"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"""
Check that the mime type in AS4 message is set to "application/pdf".
Go to Sender log (domibus.log) find the lates AS4 message and check inside value for
//eb:Messagingeb:UserMessage/eb:PayloadInfo/eb:PartInfo[2]/eb:PartProperties/
is:
&lt;eb:Property name="MimeType">application/pdf&lt;/eb:Property>.
"""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 3" id="6a8d6204-cb54-470e-b377-49012d1b896e"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS049-3-");


messageMap.setStringProperty("totalNumberOfPayloads", "2");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);
messageMap.setStringProperty("payload_2-mimeContentId", "cid:attachment");
//messageMap.setStringProperty("payload_2-mimeType", "application/pdf");
messageMap.setStringProperty("payload_2-description", "message");
String pay2 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload2 = pay2.getBytes();
messageMap.setBytes("payload_2", payload2);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Check AS4 message when mime/type not provided" id="5a181b4a-ab04-42b2-8103-49c24b0fe3ce"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"""
Check that the mime type in AS4 message is set to deafult value "application/octet-stream" as described in ICD.
Go to Sender log (domibus.log) find the lates AS4 message and check inside value for
//eb:Messagingeb:UserMessage/eb:PayloadInfo/eb:PartInfo[2]/eb:PartProperties/
is:
&lt;eb:Property name="MimeType">application/octet-stream&lt;/eb:Property>.
"""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="a7979ba6-b960-4786-9600-35e97d489026"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS049-1-");
test.verifyMessagePresence(1,1,"-DomJMS049-2-");
test.verifyMessagePresence(1,1,"-DomJMS049-3-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS049-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>79d16b81-f2af-42dc-bac7-9f612c89790c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6164c7d4-d54a-4386-a077-9c8ecc7be02b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="7c8680c0-3d9a-4068-a781-cfb36bf9651c" name="Already disabled TCs" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS010-Submit Message-action-Unicity" searchProperties="true" id="de6ee72c-ab52-4ff3-ba1b-112a86e39bea" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="ab3a1c3c-ac72-42aa-b4a0-eb3f9bfab012"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS010-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="65e972b8-18da-4ad7-b8b7-2c031a24db5b"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS009-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS010-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS019-Submit Message-refToMessageId-Unicity" searchProperties="true" id="07d56819-9dd3-4cc0-8f5f-ca6d1dc675c3" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="8b02a9a5-947f-4893-816b-51a7873805b9"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS019-1-");
//messageMap.setStringProperty("conversationId", "123");
//messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="a5f43912-a9c1-42f0-907a-809761bb1b82"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS019-2-");
//messageMap.setStringProperty("conversationId", "123");
messageMap.setStringProperty("refToMessageId", "-DomJMS018-1-");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 3" id="4cc4044a-7f44-452f-8436-8527ea1ec401"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS019-3-");
//messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="be32be48-aea5-4eb9-9b8d-e7df03d1594d"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS019-1-");
test.verifyMessagePresence(1,1,"-DomJMS019-2-");
test.verifyMessagePresence(1,1,"-DomJMS019-3-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS019-1-")
test.finalize()
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS022-Submit Message-agreementRef-Unicity" searchProperties="true" id="8bc8e9ab-aba7-4b7d-a2f3-153169b91fad" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="966efe2c-01a5-4e5f-8b4b-22e3c350833c"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS022-");
messageMap.setStringProperty("agreementRef", "messageAgreementRef");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="c58e41ec-9cad-4b4c-b74c-bbd7f47ea778"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS022-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS022-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS027-Submit Message-fromRole-Unicity" searchProperties="true" id="1923df31-f96b-4f66-9c3e-cce9d833fdec" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="fcbe828b-87e0-4b03-9e50-3b1579c0c6ab"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS027-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="9bfb3d5d-7651-471a-9c91-06dc5266fe66"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS027-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS027-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS031-Submit Message-toRole-Unicity" searchProperties="true" id="bffca804-8c1c-4b1b-aef7-e8c07c676884" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="47a5a33a-0362-4bc9-b4a7-ad0523857161"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS031-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="6e9f4199-9820-4c4c-9d1c-3d9eb50d7709"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS031-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS031-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS041-Submit Message-originalSender-Optional" searchProperties="true" id="74156b3e-6cdc-4076-9c69-b880bd878eb9" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="ecc2f5bf-8164-47ad-8736-b038baa5b8b4"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
//messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS041-1-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="d41e979a-fd5d-4b87-8c7a-15936e58300d"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS041-2-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="8187fbb2-7bd3-40a2-8394-06ee3ea9da62"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS041-1-");
test.verifyMessagePresence(1,1,"-DomJMS041-2-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS041-1-");
test.cleanDBMessageID("-DomJMS041-2-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS042-Submit Message-finalRecipient-Optional" searchProperties="true" id="9554fcb2-6a1a-476a-aa0e-7802b65e8f0c" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="70290cb0-c91d-45c8-94b0-548977b7b3f2"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
//messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS042-1-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="66fdb096-973d-407a-8185-564c80ad2dd0"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS042-2-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="49deea2d-1a9c-435c-99c0-bed61b1bec98"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS042-1-");
test.verifyMessagePresence(1,1,"-DomJMS042-2-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS042-1-");
test.cleanDBMessageID("-DomJMS042-2-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS053-Test Experience-Heavy Logs" searchProperties="true" id="ba69c1f4-7801-4746-974f-4488cd8419e3" disabled="true">
            <con:settings/>
            <con:testStep type="groovy" name="Start a load test" id="842f9eca-3e10-4d03-b2a5-238ae54ec5e2"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

def int i = 0;
while (i&lt;601){
	messageMap.setStringProperty("messageId", "-DomJMS053-"+i+"-");
	log.info "sending message";
	producer.send(messageMap);
	log.info "message sent";
	i=i+1;
	sleep(1000);
}

connection.close();</script></con:config></con:testStep>
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Test" id="fb220921-e0f7-4290-87e1-01ac58a9159c"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
def int i = 0;
while (i&lt;201){
	test.verifyMessagePresence(1,1,"-DomJMS053-"+i+"-");
	i=i+1;
}
test.finalize();</script></con:config></con:testStep><con:testStep type="groovy" name="Check log file" id="b96a8f17-0d3e-4ceb-8205-427c526f2673"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Monitor the log file to check that its size did not increase widely."); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDatabaseAll();
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46a821e6-6caf-43f3-8f1e-fc16fd2acf61</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>90414ed1-d501-45a8-86b6-466a1352735c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cd8b9098-8fbd-42a9-8eb7-67404b5f59dd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>72f090b9-c1df-403b-be48-8ef3c9ecf20d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7ac680a1-b718-48cb-9143-8f9d5f804428</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3b40bbed-e32e-4914-9233-835456ba5072</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d4fc8565-27c9-4dcc-b3fb-4d74a19e13f7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>61b4d9bb-4e84-41fc-8693-38ddde563805</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>51f172b0-1579-4e33-8238-4f8fcde52724</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>191f2293-f259-4f91-b2f9-0ebb192b4853</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ceb3fbad-5f2d-4f54-b224-2fe362d97e90</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3ef6c6b6-6ed8-432c-a5bd-652673625532</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>17181449-3631-45fb-b47e-1c72b8d23aad</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>99884ca6-6750-4fc8-b686-65d6f4a7ad94</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>961097d1-6119-41d1-b47d-e81ac893b45e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b2f3cd3a-0dcd-4a96-bd04-ce3242432770</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1de195c0-a649-4eb4-bf92-90229ef44b7c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ef797b9a-5e4c-4aa5-8885-33701329e37b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>230c268d-d43f-41c8-bde9-41068936c667</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e51e438a-c563-46a9-a07d-cc69709a0291</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7009247c-334b-4900-96ce-ce3d24549fad</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4ada5e10-3044-4206-849d-d82681db0c51</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:requirements/><con:properties><con:property><con:name>localUrl</con:name><con:value>http://localhost:8080/domibus</con:value></con:property><con:property><con:name>databaseBlue</con:name><con:value>mysql</con:value></con:property><con:property><con:name>driverBlue</con:name><con:value>com.mysql.jdbc.Driver</con:value></con:property><con:property><con:name>jdbcUrlBlue</con:name><con:value>jdbc:mysql://localhost:3306/domibus_blue_alt</con:value></con:property><con:property><con:name>blueDbUser</con:name><con:value>root</con:value></con:property><con:property><con:name>blueDbPassword</con:name><con:value>root</con:value></con:property><con:property><con:name>pathExeSender</con:name><con:value>${#Project#pathBlue}bin/</con:value></con:property><con:property><con:name>remoteUrl</con:name><con:value>http://localhost:8180/domibus</con:value></con:property><con:property><con:name>databaseRed</con:name><con:value>mysql</con:value></con:property><con:property><con:name>driverRed</con:name><con:value>com.mysql.jdbc.Driver</con:value></con:property><con:property><con:name>jdbcUrlRed</con:name><con:value>jdbc:mysql://localhost:3306/domibus_red_alt</con:value></con:property><con:property><con:name>redDbUser</con:name><con:value>root</con:value></con:property><con:property><con:name>redDbPassword</con:name><con:value>root</con:value></con:property><con:property><con:name>pathExeReceiver</con:name><con:value>${#Project#pathRed}bin/</con:value></con:property><con:property><con:name>greenUrl</con:name><con:value>http://localhost:8280/domibus</con:value></con:property><con:property><con:name>databaseGreen</con:name><con:value>mysql</con:value></con:property><con:property><con:name>driverGreen</con:name><con:value>com.mysql.jdbc.Driver</con:value></con:property><con:property><con:name>jdbcUrlGreen</con:name><con:value>jdbc:mysql://localhost:3306/domibus_green</con:value></con:property><con:property><con:name>greenDbUser</con:name><con:value>root</con:value></con:property><con:property><con:name>greenDbPassword</con:name><con:value>root</con:value></con:property><con:property><con:name>pathExeGreen</con:name><con:value>${#Project#pathGreen}/bin/</con:value></con:property><con:property><con:name>reportFilePath</con:name><con:value>${projectDir}\\reports\\Domibus_3_3_4_test_results.xlsx</con:value></con:property><con:property><con:name>updateReport</con:name><con:value>true</con:value></con:property><con:property><con:name>pdfAttachment</con:name><con:value>${projectDir}\\resources\\fileSmall.pdf </con:value></con:property><con:property><con:name>specialPModesPath</con:name><con:value>${projectDir}\\resources\\PModesandKeystoresSpecialTests</con:value></con:property><con:property><con:name>defaultPModesPath</con:name><con:value>${projectDir}\\resources\\PModesandKeystoresDefault</con:value></con:property><con:property><con:name>thirdGateway</con:name><con:value>false</con:value></con:property><con:property><con:name>testEnvUrl</con:name><con:value>http://104.40.147.186:7005/domibus-weblogic</con:value></con:property><con:property><con:name>moreThan100mbAttachment</con:name><con:value>${projectDir}\\resources\\videoplayback_mp4.pdf</con:value></con:property><con:property><con:name>pathBlue</con:name><con:value>C:/domibus/sender/domibus/</con:value></con:property><con:property><con:name>pathRed</con:name><con:value>C:/domibus/receiver/domibus/</con:value></con:property><con:property><con:name>pathGreen</con:name><con:value>C:/domibus/greenReceiver/domibus/</con:value></con:property><con:property><con:name>subPathToDomibusProperties</con:name><con:value>conf/domibus/domibus.properties</con:value></con:property></con:properties><con:wssContainer/><con:databaseConnectionContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:parameters/></con:reporting><con:sensitiveInformation/></con:soapui-project>